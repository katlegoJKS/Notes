app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://user:pass@localhost:5432/umuzi_pcs'
db = SQLAlchemy(app)
migrate = Migrate(app, db)

class Computer(db.Model):
    __tablename__ = 'computers'

    ComputerID = db.Column(db.Integer, primary_key=True)
    hard_drive_type = db.Column(db.String(50))
    processor = db.Column(db.String(50))
    amount_of_ram = db.Column(db.String(50))
    maximum_ram = db.Column(db.String(50))
    hard_drive_space = db.Column(db.String(50))
    form_factor = db.Column(db.String(50), unique=True)

    def __init__(self, hard_drive_type, processor, amount_of_ram, maximum_ram, hard_drive_space, form_factor):
        self.hard_drive_type = hard_drive_type
        self.processor = processor
        self.amount_of_ram = amount_of_ram
        self.maximum_ram = maximum_ram
        self.hard_drive_space = hard_drive_space
        self.form_factor = form_factor

    def __repr__(self):
        return "Computer"

@app.route('/computers/<computer_id>', methods=['GET', 'PUT', 'DELETE'])
def handle_computer(computer_id):
    comptr = computerModel.query.get_or_404(computer_id)

    if request.method == 'GET':
        response = {
            "name": comptr.name,
            "model": comptr.model,
            "hardDrive": comptr.hardDrive
        }
        return {"message": "success", "comptr": response}

    elif request.method == 'PUT':
        data = request.get_json()
        comptr.name = data['name']
        comptr.model = data['model']
        comptr.hardDrive = data['hardDrive']
        db.session.add(comptr)
        db.session.commit()
        return {"message": f"comptr {comptr.name} successfully updated"}

    elif request.method == 'DELETE':
        db.session.delete(comptr)
        db.session.commit()
        return {"message": f"Car {comptr.name} successfully deleted."}